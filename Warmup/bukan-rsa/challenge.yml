# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

# Required sections
name: "bukan-rsa"
author: "rui"
category: "Cryptography"
description: |
    **Author**: `rui`

    iya ini elgamal, cara solve? nonton ini https://youtu.be/Gp6NUFi9bmk?si=ZkflGRvTDj5aTdX0

    ```python
    from Crypto.Util.number import bytes_to_long, getRandomRange

    flag = bytes_to_long(b"TCF2024{????????????????}")
    g = 3
    p = 12356573163529598509213416174151861564596383830485018644278746893087090144408283958799336630528980126522872980535414844640172383511144755076498012598740491
    x = 4269683307793620725070072977211386971525204150007887251853021892065742120162824806232150523319700182794711503615223400958382182740095937720121533292824860
    y = pow(g, x, p)
    k = getRandomRange(2, p-2)
    c1 = pow(g, k, p)
    s = pow(y, k, p)
    c2 = (flag * s) % p

    print(f"{c1 = }\n{c2 = }")

    # Output:
    # c1 = 11576793294956581447942827732474525036726321123141607291649578919191328375748354750403570532336816570254127112205724739592493832284630645500328575885898482
    # c2 = 5869151441899192030633298239328772075475210301249926616779656042841923219443140774357107951495645924345530369302336702148205619608533666433864816609554681
    ```
value: 100
type: dynamic

# The extra field provides additional fields for data during the install/sync commands/
# Fields in extra can be used to supply additional information for other challenge types
# For example the follow extra field is for dynamic challenges. To use these following
# extra fields, set the type to "dynamic" and uncomment the "extra" section below
extra:
    initial: 500
    decay: 100
    minimum: 50

# Settings used for Dockerfile deployment
# If not used, remove or set to null
# If you have a Dockerfile set to .
# If you have an imaged hosted on Docker set to the image url (e.g. python/3.8:latest, registry.gitlab.com/python/3.8:latest)
# Follow Docker best practices and assign a tag
image: null

# Specify a protocol that should be used to connect to the running image
# For example if the image is a website you can specify http or https
# Otherwise you can specify tcp
protocol: null

# Specify a host to deploy the challenge onto.
# The currently supported URI schemes are ssh:// and registry://
# ssh is an ssh URI where the above image will be copied to and deployed (e.g. ssh://root@123.123.123.123)
# registry is a Docker registry tag (e.g registry://registry.example.com/test/image)
# host can also be specified during the deploy process: `ctf challenge deploy challenge --host=ssh://root@123.123.123.123`
host: null

# Optional settings

# connection_info is used to provide a link, hostname, or instructions on how to connect to a challenge

# healthcheck is a tool/script used to check a challenge
# If connection_info was provided to CTFd when the challenge was installed, it will be passed to the healthcheck script:
# ./writeup/exploit.sh --connection-info "nc hostname 12345"
# healthcheck: writeup/exploit.sh

# Can be removed if unused
# attempts: 5

# Flags specify answers that your challenge use. You should generally provide at least one.
# Can be removed if unused
# Accepts strings or dictionaries of CTFd API data
flags:
    - TCF2024{bf4cd965fe1ea5641aac80f630046d5c977c5fa8}

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
    - elgamal

# Tags are used to provide additional public tagging to a challenge
# Can be removed if unused
# Accepts strings
tags:
    - elgamal

# Provide paths to files from the same directory that this file is in
# Accepts strings

# Hints are used to give players a way to buy or have suggestions. They are not
# required but can be nice.
# Can be removed if unused
# Accepts dictionaries or strings
# hints:
#     - {
#         content: "This hint costs points",
#         cost: 10
#     }
#     - This hint is free

# Requirements are used to mCTF-XSS-BOT/bot CTF-XSS-BOT/src CTF-XSS-BOT/docker-compose.yaml CTF-XSS-BOT/LICENSE CTF-XSS-BOT/proxy.confake a challenge require another challenge to be
# solved before being available.
# Can be removed if unused
# Accepts challenge names as strings or challenge IDs as integers
# requirements:
#     - "Warmup"
#     - "Are you alive"

# The state of the challenge.
# If the field is omitted, the challenge is visible by default.
# If provided, the field can take one of two values: hidden, visible.
state: visible

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
