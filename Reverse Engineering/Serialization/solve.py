def restore_input(serial_number):
    parts = serial_number.split("-")
    n = int(len(parts) ** 0.5)
    
    # Split each part of the serial number into s_box and shuffleMatrix values
    s_box_values = []
    shuffle_matrix_values = []
    for part in parts:
        s_box_value, shuffle_matrix_value = part[:4], part[4:]
        s_box_values.append(int(s_box_value, 16))
        shuffle_matrix_values.append(int(shuffle_matrix_value, 16))
    
    # Create the s-box matrix and reverse shuffle operations
    s_box = [[s_box_values[i * n + j] for j in range(n)] for i in range(n)]
    original_matrix = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            original_matrix[i][j] = shuffle_matrix_values[s_box[i][j]]
    
    # Reverse the multiplication by 8 operation
    for i in range(n):
        for j in range(n):
            original_matrix[i][j] //= 8
    
    # Extract the input numbers from the original matrix
    input_numbers = [original_matrix[i][j] for i in range(n) for j in range(n)]
    
    # Convert input numbers to characters and concatenate them
    input_string = "".join(chr(num) for num in input_numbers)
    
    return input_string

# Example serial number generated by your C code
serial_number = "070168-150310-090370-1303A8-0C0318-020230-2C0348-210328-2E0308-2007B8-2A0328-180188-1F06C0-260360-0D03D8-250338-1402A8-300390-2F0348-190178-240378-100340-0601A0-2D0360-220398-030190-1B0370-2B03D0-110368-170780-1D0390-010218-0A0398-0E03C8-1A0390-0F03A0-1E0498-280168-230320-1203E8-290328-080248-160348-0B0328-1C0168-050190-270208-0002A0-040180"
restored_input = restore_input(serial_number)
print("Restored Input:", restored_input)
